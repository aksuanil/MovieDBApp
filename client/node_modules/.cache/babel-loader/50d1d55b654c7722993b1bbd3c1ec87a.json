{"ast":null,"code":"import _slicedToArray from\"C:/Users/An\\u0131l AKSU/Desktop/MovieDBApp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"C:/Users/An\\u0131l AKSU/Desktop/MovieDBApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\An\\u0131l AKSU\\\\Desktop\\\\MovieDBApp\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState,useCallback}from\"react\";import Header from\"./components/Header\";import{QueryClient,QueryClientProvider,useQuery}from\"react-query\";import MovieGrid from\"./components/MovieGrid\";import CategoryBar from\"./components/CategoryBar\";import{useParams}from\"react-router-dom\";import Loader from\"./components/Loader\";import Footer from\"./components/Footer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function HomePage(){var fetchPopular=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/main\");case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchPopular(){return _ref.apply(this,arguments);};}();var _useQuery=useQuery('popular',fetchPopular),data=_useQuery.data,status=_useQuery.status;var fetchGenre=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"movies/getMoviesByGenre/\".concat(id));case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.json());case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchGenre(){return _ref2.apply(this,arguments);};}();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),id=_useState2[0],setData=_useState2[1];var _useState3=useState('popular'),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var teamsQuery=useQuery([\"genre\",id],fetchGenre);var getGenreId=function getGenreId(genreId){setData(genreId);setPage(\"others\");// fetchGenre(id);\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-300\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(CategoryBar,{getGenreId:getGenreId}),status==='loading'&&page==='popular'&&/*#__PURE__*/_jsx(Loader,{}),status==='error'&&page==='popular'&&/*#__PURE__*/_jsx(\"div\",{children:\"Error fetching data\"}),status==='success'&&page==='popular'&&/*#__PURE__*/_jsx(MovieGrid,{data:data.data}),teamsQuery.status==='loading'&&page==='others'&&/*#__PURE__*/_jsx(Loader,{}),teamsQuery.status==='error'&&page==='others'&&/*#__PURE__*/_jsx(\"div\",{children:\"Error fetching data\"}),teamsQuery.status==='success'&&page==='others'&&/*#__PURE__*/_jsx(MovieGrid,{data:teamsQuery.data.data}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"sources":["C:/Users/AnÄ±l AKSU/Desktop/MovieDBApp/client/src/HomePage.js"],"names":["React","useEffect","useState","useCallback","Header","QueryClient","QueryClientProvider","useQuery","MovieGrid","CategoryBar","useParams","Loader","Footer","HomePage","fetchPopular","fetch","response","json","data","status","fetchGenre","id","setData","page","setPage","teamsQuery","getGenreId","genreId"],"mappings":"kaAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,WAAT,CAAsBC,mBAAtB,CAA2CC,QAA3C,KAA2D,aAA3D,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,YAAY,0FAAG,sKACIC,CAAAA,KAAK,CAAC,OAAD,CADT,QACbC,QADa,+CAEZA,QAAQ,CAACC,IAAT,EAFY,wDAAH,kBAAZH,CAAAA,YAAY,0CAAlB,CAIA,cAAuBP,QAAQ,CAAC,SAAD,CAAYO,YAAZ,CAA/B,CAAOI,IAAP,WAAOA,IAAP,CAAaC,MAAb,WAAaA,MAAb,CAEA,GAAMC,CAAAA,UAAU,2FAAG,4KACML,CAAAA,KAAK,mCAA4BM,EAA5B,EADX,QACXL,QADW,iDAEVA,QAAQ,CAACC,IAAT,EAFU,0DAAH,kBAAVG,CAAAA,UAAU,2CAAhB,CAIA,cAAsBlB,QAAQ,CAAC,CAAD,CAA9B,wCAAOmB,EAAP,eAAWC,OAAX,eACA,eAAwBpB,QAAQ,CAAC,SAAD,CAAhC,yCAAOqB,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAGlB,QAAQ,CAAC,CAAC,OAAD,CAAUc,EAAV,CAAD,CAAgBD,UAAhB,CAA3B,CAEA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAa,CAC9BL,OAAO,CAACK,OAAD,CAAP,CACAH,OAAO,CAAC,QAAD,CAAP,CACA;AACD,CAJD,CAKE,mBACA,aAAK,SAAS,CAAC,cAAf,wBACM,KAAC,MAAD,IADN,cAEM,KAAC,WAAD,EAAa,UAAU,CAAEE,UAAzB,EAFN,CAISP,MAAM,GAAK,SAAX,EAAwBI,IAAI,GAAK,SAAjC,eACC,KAAC,MAAD,IALV,CAOSJ,MAAM,GAAK,OAAX,EAAsBI,IAAI,GAAK,SAA/B,eACC,4CARV,CAUSJ,MAAM,GAAK,SAAX,EAAwBI,IAAI,GAAK,SAAjC,eACC,KAAC,SAAD,EAAW,IAAI,CAAEL,IAAI,CAACA,IAAtB,EAXV,CAcSO,UAAU,CAACN,MAAX,GAAsB,SAAtB,EAAmCI,IAAI,GAAK,QAA5C,eACC,KAAC,MAAD,IAfV,CAiBSE,UAAU,CAACN,MAAX,GAAsB,OAAtB,EAAiCI,IAAI,GAAK,QAA1C,eACC,4CAlBV,CAoBSE,UAAU,CAACN,MAAX,GAAsB,SAAtB,EAAmCI,IAAI,GAAK,QAA5C,eACC,KAAC,SAAD,EAAW,IAAI,CAAEE,UAAU,CAACP,IAAX,CAAgBA,IAAjC,EArBV,cAuBM,KAAC,MAAD,IAvBN,GADA,CA2BH","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\"\r\nimport MovieGrid from \"./components/MovieGrid\";\r\nimport CategoryBar from \"./components/CategoryBar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"./components/Loader\";\r\nimport Footer from \"./components/Footer\"\r\n\r\nexport default function HomePage() {\r\n  const fetchPopular = async ()=> {\r\n    const response = await fetch(\"/main\");\r\n    return response.json();\r\n  }\r\n  const {data, status} = useQuery('popular', fetchPopular);\r\n\r\n  const fetchGenre = async ()=> {\r\n    const response = await fetch(`movies/getMoviesByGenre/${id}`);\r\n    return response.json();\r\n  }\r\n  const [id, setData] = useState(0);\r\n  const [page, setPage] = useState('popular')\r\n\r\n  const teamsQuery = useQuery([\"genre\", id], fetchGenre)\r\n\r\n  const getGenreId = (genreId) => {\r\n    setData(genreId);\r\n    setPage(\"others\")\r\n    // fetchGenre(id);\r\n  }\r\n    return (\r\n    <div className=\"bg-slate-300\">\r\n          <Header/>\r\n          <CategoryBar getGenreId={getGenreId}/>\r\n          \r\n            {status === 'loading' && page === 'popular' && (\r\n              <Loader/>\r\n            )}\r\n            {status === 'error' && page === 'popular'  && (\r\n              <div>Error fetching data</div>\r\n            )}\r\n            {status === 'success' && page === 'popular' && (\r\n              <MovieGrid data={data.data}/>\r\n            )}\r\n\r\n            {teamsQuery.status === 'loading' && page === 'others' && (\r\n              <Loader/>\r\n            )}\r\n            {teamsQuery.status === 'error' && page === 'others' && (\r\n              <div>Error fetching data</div>\r\n            )}\r\n            {teamsQuery.status === 'success' && page === 'others' && (\r\n              <MovieGrid data={teamsQuery.data.data}/>\r\n            )}\r\n          <Footer/>\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}