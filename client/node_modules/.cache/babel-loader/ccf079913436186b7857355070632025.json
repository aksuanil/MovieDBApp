{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVisibleItemCount = exports.getIndexToScrollTo = exports.isNextButtonVisible = exports.isPrevButtonVisible = exports.getMaximumAccomodableItemCount = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range = require('range');\n\nvar _debounce = require('debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\n\n\nvar getMaximumAccomodableItemCount = exports.getMaximumAccomodableItemCount = function getMaximumAccomodableItemCount(fullWidth, elementWidth, elementMargin) {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nvar isPrevButtonVisible = exports.isPrevButtonVisible = function isPrevButtonVisible(firstVisibleIndex) {\n  return firstVisibleIndex > 0;\n};\n\nvar isNextButtonVisible = exports.isNextButtonVisible = function isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount) {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nvar getIndexToScrollTo = exports.getIndexToScrollTo = function getIndexToScrollTo(direction, totalItems, visibleItemCount, firstVisibleIndex, scrollStepDistance) {\n  var index = void 0;\n  var itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  var itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nvar getVisibleItemCount = exports.getVisibleItemCount = function getVisibleItemCount(totalItems, firstVisibleIndex, itemWidth, itemMargin, controlWidth, maxWidth) {\n  var availableWidth = void 0;\n  var visibleItemCount = void 0;\n  availableWidth = maxWidth + itemMargin;\n  var prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  var nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  function Carousel(props) {\n    _classCallCheck(this, Carousel);\n\n    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));\n\n    _this.handleScrollToDirection = function (direction, visibleItemCount) {\n      var index = getIndexToScrollTo(direction, _this.props.children.length, visibleItemCount, _this.state.firstVisibleIndex, _this.props.scrollStepDistance || visibleItemCount);\n\n      _this.props.onItemScroll(index);\n\n      _this.setState({\n        firstVisibleIndex: index\n      });\n    };\n\n    _this.getItemElement = function (item, key, index, visibleItemCount) {\n      var visibleItemIndeces = (0, _range.range)(_this.state.firstVisibleIndex, visibleItemCount + _this.state.firstVisibleIndex);\n      var isVisible = visibleItemIndeces.includes(index);\n      var isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n      if (!isVisible) {\n        return null;\n      }\n\n      return _react2.default.createElement('li', {\n        key: key,\n        style: {\n          boxSizing: 'border-box',\n          display: 'flex',\n          listStyleType: 'none',\n          marginRight: isLastAmongVisible ? 0 : _this.props.itemMargin,\n          width: _this.props.itemWidth\n        }\n      }, item);\n    };\n\n    _this.captureWrapperElementReference = function (element) {\n      if (element) {\n        _this.wrapperElement = element;\n      }\n    };\n\n    _this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n    _this.resizeEventListener = (0, _debounce2.default)(function () {\n      _this.setState({\n        maxWidth: _this.wrapperElement.offsetWidth\n      });\n    }, 100);\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!this.wrapperElement) {\n        throw new Error('Unexpected state.');\n      }\n\n      var maxWidth = this.wrapperElement.offsetWidth;\n      this.setState({\n        maxWidth: maxWidth\n      });\n      window.addEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.resizeEventListener.clear();\n      window.removeEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          controlWidth = _props.controlWidth,\n          itemMargin = _props.itemMargin,\n          children = _props.children,\n          itemWidth = _props.itemWidth;\n      var items = children;\n      var itemCount = items.length;\n      var visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n      var prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n      var nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n      var carouselStyle = _extends({\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flexGrow: 1,\n        overflow: 'hidden'\n      }, this.props.style);\n\n      var navigationButtonStyle = {\n        boxSizing: 'border-box',\n        height: 'inherit',\n        margin: 0,\n        padding: 0,\n        width: controlWidth\n      };\n\n      var navigationButtonPreviousStyle = _extends({}, navigationButtonStyle, {\n        display: prevButtonVisible ? 'flex' : 'none'\n      });\n\n      var navigationButtonNextStyle = _extends({}, navigationButtonStyle, {\n        display: nextButtonVisible ? 'flex' : 'none'\n      });\n\n      var bodyStyle = {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        margin: 0,\n        padding: 0\n      };\n      return _react2.default.createElement('div', {\n        className: 'react-carousel',\n        ref: this.captureWrapperElementReference,\n        style: carouselStyle\n      }, _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--previous',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('previous', visibleItemCount);\n        },\n        style: navigationButtonPreviousStyle\n      }), _react2.default.createElement('ul', {\n        style: bodyStyle\n      }, items.map(function (item, index) {\n        if (!item.key) {\n          throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n        }\n\n        return _this2.getItemElement(item, item.key, index, visibleItemCount);\n      })), _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--next',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('next', visibleItemCount);\n        },\n        style: navigationButtonNextStyle\n      }));\n    }\n  }]);\n\n  return Carousel;\n}(_react.Component);\n\nCarousel.defaultProps = {\n  controlWidth: 30,\n  firstVisibleIndex: 0,\n  itemMargin: 0,\n  itemWidth: 50,\n  onItemScroll: function onItemScroll() {},\n  scrollStepDistance: null\n};\nexports.default = Carousel;","map":{"version":3,"mappings":"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","names":["getMaximumAccomodableItemCount","fullWidth","elementWidth","elementMargin","Math","floor","isPrevButtonVisible","firstVisibleIndex","isNextButtonVisible","totalItems","visibleItemCount","getIndexToScrollTo","direction","scrollStepDistance","index","itemsBeyondVisible","itemsBehindVisible","Error","getVisibleItemCount","itemWidth","itemMargin","controlWidth","maxWidth","availableWidth","prevButtonVisible","nextButtonVisible","Carousel","props","_classCallCheck","_this","handleScrollToDirection","children","length","state","onItemScroll","setState","getItemElement","item","key","visibleItemIndeces","isVisible","includes","isLastAmongVisible","indexOf","_react2","style","boxSizing","display","listStyleType","marginRight","width","captureWrapperElementReference","element","wrapperElement","resizeEventListener","offsetWidth","window","addEventListener","clear","removeEventListener","items","itemCount","carouselStyle","flexFlow","flexGrow","overflow","navigationButtonStyle","height","margin","padding","navigationButtonPreviousStyle","navigationButtonNextStyle","bodyStyle","className","ref","onClick","_this2","map","defaultProps"],"sources":["C:\\Users\\Anıl AKSU\\Desktop\\MovieDBApp\\client\\node_modules\\react-carousel\\src\\Carousel.js"],"sourcesContent":["// @flow\n\nimport React, {\n  Component\n} from 'react';\nimport {\n  range\n} from 'range';\nimport debounce from 'debounce';\n\ntype DirectionType = 'previous' | 'next';\n\ntype ComponentStateType = {|\n  firstVisibleIndex: number,\n  maxWidth: number\n|};\n\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\nexport const getMaximumAccomodableItemCount = (fullWidth: number, elementWidth: number, elementMargin: number): number => {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nexport const isPrevButtonVisible = (firstVisibleIndex: number): boolean => {\n  return firstVisibleIndex > 0;\n};\n\nexport const isNextButtonVisible = (totalItems: number, firstVisibleIndex: number, visibleItemCount: number): boolean => {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nexport const getIndexToScrollTo = (\n  direction: DirectionType,\n  totalItems: number,\n  visibleItemCount: number,\n  firstVisibleIndex: number,\n  scrollStepDistance: number\n): number => {\n  let index;\n\n  const itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  const itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nexport const getVisibleItemCount = (\n  totalItems: number,\n  firstVisibleIndex: number,\n  itemWidth: number,\n  itemMargin: number,\n  controlWidth: number,\n  maxWidth: number\n) => {\n  let availableWidth;\n  let visibleItemCount;\n\n  availableWidth = maxWidth + itemMargin;\n\n  const prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n\n  const nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\ntype PropsType = {|\n  +children: *,\n  +controlWidth: number,\n  +firstVisibleIndex: number,\n  +itemMargin: number,\n  +itemWidth: number,\n  +onItemScroll: (index: number) => void,\n  +scrollStepDistance: number,\n  +style: {\n    [key: string]: string\n  }\n|};\n\nclass Carousel extends Component<PropsType, ComponentStateType> {\n  resizeEventListener: () => void;\n  wrapperElement: HTMLElement;\n\n  static defaultProps = {\n    controlWidth: 30,\n    firstVisibleIndex: 0,\n    itemMargin: 0,\n    itemWidth: 50,\n    onItemScroll: () => {},\n    scrollStepDistance: null\n  };\n\n  constructor (props: PropsType) {\n    super(props);\n\n    this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n\n    this.resizeEventListener = debounce(() => {\n      this.setState({\n        maxWidth: this.wrapperElement.offsetWidth\n      });\n    }, 100);\n  }\n\n  componentDidMount () {\n    if (!this.wrapperElement) {\n      throw new Error('Unexpected state.');\n    }\n\n    const maxWidth = this.wrapperElement.offsetWidth;\n\n    this.setState({\n      maxWidth\n    });\n\n    window.addEventListener('resize', this.resizeEventListener);\n  }\n\n  componentWillUnmount () {\n    this.resizeEventListener.clear();\n\n    window.removeEventListener('resize', this.resizeEventListener);\n  }\n\n  handleScrollToDirection = (direction: DirectionType, visibleItemCount: number): void => {\n    const index = getIndexToScrollTo(\n      direction,\n      this.props.children.length,\n      visibleItemCount,\n      this.state.firstVisibleIndex,\n      this.props.scrollStepDistance || visibleItemCount\n    );\n\n    this.props.onItemScroll(index);\n\n    this.setState({\n      firstVisibleIndex: index\n    });\n  };\n\n  getItemElement = (item: React$Element<any>, key: string, index: number, visibleItemCount: number): React$Element<any> | null => {\n    const visibleItemIndeces = range(this.state.firstVisibleIndex, visibleItemCount + this.state.firstVisibleIndex);\n    const isVisible = visibleItemIndeces.includes(index);\n    const isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n    if (!isVisible) {\n      return null;\n    }\n\n    return <li\n      key={key}\n      style={{\n        boxSizing: 'border-box',\n        display: 'flex',\n        listStyleType: 'none',\n        marginRight: isLastAmongVisible ? 0 : this.props.itemMargin,\n        width: this.props.itemWidth\n      }}\n    >\n      {item}\n    </li>;\n  };\n\n  captureWrapperElementReference = (element: *) => {\n    if (element) {\n      this.wrapperElement = element;\n    }\n  };\n\n  render () {\n    const {\n      controlWidth,\n      itemMargin,\n      children,\n      itemWidth\n    } = this.props;\n    const items = children;\n    const itemCount = items.length;\n    const visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n    const prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n    const nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n    const carouselStyle = {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      flexGrow: 1,\n      overflow: 'hidden',\n      ...this.props.style\n    };\n\n    const navigationButtonStyle = {\n      boxSizing: 'border-box',\n      height: 'inherit',\n      margin: 0,\n      padding: 0,\n      width: controlWidth\n    };\n\n    const navigationButtonPreviousStyle = {\n      ...navigationButtonStyle,\n      display: prevButtonVisible ? 'flex' : 'none'\n    };\n\n    const navigationButtonNextStyle = {\n      ...navigationButtonStyle,\n      display: nextButtonVisible ? 'flex' : 'none'\n    };\n\n    const bodyStyle = {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      margin: 0,\n      padding: 0\n    };\n\n    return <div\n      className='react-carousel'\n      ref={this.captureWrapperElementReference}\n      style={carouselStyle}\n    >\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--previous'\n        onClick={() => {\n          this.handleScrollToDirection('previous', visibleItemCount);\n        }}\n        style={navigationButtonPreviousStyle}\n      />\n      <ul style={bodyStyle}>\n        {items.map((item, index) => {\n          if (!item.key) {\n            throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n          }\n\n          return this.getItemElement(item, item.key, index, visibleItemCount);\n        })}\n      </ul>\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--next'\n        onClick={() => {\n          this.handleScrollToDirection('next', visibleItemCount);\n        }}\n        style={navigationButtonNextStyle}\n      />\n    </div>;\n  }\n}\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"script"}