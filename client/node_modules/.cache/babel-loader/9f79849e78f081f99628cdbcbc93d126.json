{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\An\\u0131l AKSU\\\\Desktop\\\\MovieDBApp\\\\client\\\\src\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport { useQuery } from \"react-query\";\nimport SearchCard from \"./components/SearchCard\";\nimport Loader from \"./components/Loader\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { serverPath } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  let searchString = searchParams.get(\"search\");\n\n  const fetchPopular = async () => {\n    const response = await fetch(`${serverPath}search?search=${searchString}`);\n    return response.json();\n  };\n\n  const {\n    data,\n    status\n  } = useQuery('search', fetchPopular);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(SearchCard, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"v3wfHklMIL+Ftx8AYc62Z0xBdEU=\", false, function () {\n  return [useSearchParams, useQuery];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/AnÄ±l AKSU/Desktop/MovieDBApp/client/src/Search.js"],"names":["React","useEffect","Header","useQuery","SearchCard","Loader","useSearchParams","serverPath","Search","searchParams","setSearchParams","searchString","get","fetchPopular","response","fetch","json","data","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,OAA3B;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,eAAe,EAAvD;AACA,MAAIK,YAAY,GAAGF,YAAY,CAACG,GAAb,CAAiB,QAAjB,CAAnB;;AACA,QAAMC,YAAY,GAAG,YAAW;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,UAAW,iBAAgBI,YAAa,EAA5C,CAA5B;AACA,WAAOG,QAAQ,CAACE,IAAT,EAAP;AACD,GAHH;;AAIA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAiBf,QAAQ,CAAC,QAAD,EAAWU,YAAX,CAA/B;AACEM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACF,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,MAAM,KAAK,SAAX,iBACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHN,EAKKA,MAAM,KAAK,OAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANN,EAQKA,MAAM,KAAK,SAAX,iBACD,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAcH;;GAvBQT,M;UACmCF,e,EAMjBH,Q;;;KAPlBK,M;AAwBT,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { useQuery } from \"react-query\";\r\nimport SearchCard from \"./components/SearchCard\";\r\nimport Loader from \"./components/Loader\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { serverPath } from \"./App\";\r\n\r\nfunction Search() {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    let searchString = searchParams.get(\"search\")    \r\n    const fetchPopular = async ()=> {\r\n        const response = await fetch(`${serverPath}search?search=${searchString}`);\r\n        return response.json();\r\n      }\r\n    const {data, status} = useQuery('search', fetchPopular);\r\n      console.log(data);\r\n    return (\r\n        <>\r\n            <Header/>\r\n            {status === 'loading' && (\r\n              <Loader/>\r\n            )}\r\n            {status === 'error' && (\r\n              <div>Error fetching data</div>\r\n            )}\r\n            {status === 'success' && (\r\n            <SearchCard data={data}/>\r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}