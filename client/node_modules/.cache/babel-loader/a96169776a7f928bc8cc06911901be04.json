{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\An\\u0131l AKSU\\\\Desktop\\\\MovieDBApp\\\\client\\\\src\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Header from \"./components/Header\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport MovieGrid from \"./components/MovieGrid\";\nimport CategoryBar from \"./components/CategoryBar\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const fetchPopular = async () => {\n    const response = await fetch(\"/main\");\n    return response.json();\n  };\n\n  const {\n    data,\n    status\n  } = useQuery('popular', fetchPopular);\n  console.log(data);\n\n  const fetchGenre = async id => {\n    const response = await fetch(`movies/getMoviesByGenre/${id}`);\n    return response.json();\n  };\n\n  const teamsQuery = useQuery('genre', () => fetchGenre(id));\n  console.log(teamsQuery.data);\n  const [id, setData] = useState(\"\");\n\n  const getGenreId = genreId => {\n    fetchGenre(id);\n    setData(genreId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-300\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CategoryBar, {\n      getGenreId: getGenreId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(MovieGrid, {\n      data: data.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"b5rstad6GHHvyO6u2Db5cmetu6k=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/AnÄ±l AKSU/Desktop/MovieDBApp/client/src/HomePage.js"],"names":["React","useEffect","useState","useCallback","Header","QueryClient","QueryClientProvider","useQuery","MovieGrid","CategoryBar","useParams","Loader","HomePage","fetchPopular","response","fetch","json","data","status","console","log","fetchGenre","id","teamsQuery","setData","getGenreId","genreId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,QAA3C,QAA2D,aAA3D;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAMC,YAAY,GAAG,YAAW;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAD,CAA5B;AACA,WAAOD,QAAQ,CAACE,IAAT,EAAP;AAED,GAJC;;AAKA,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAiBX,QAAQ,CAAC,SAAD,EAAYM,YAAZ,CAA/B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAGA,QAAMI,UAAU,GAAG,MAAOC,EAAP,IAAa;AAC9B,UAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,2BAA0BO,EAAG,EAA/B,CAA5B;AACA,WAAOR,QAAQ,CAACE,IAAT,EAAP;AACD,GAHD;;AAIA,QAAMO,UAAU,GAAGhB,QAAQ,CAAC,OAAD,EAAW,MAAMc,UAAU,CAACC,EAAD,CAA3B,CAA3B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACN,IAAvB;AACA,QAAM,CAACK,EAAD,EAAKE,OAAL,IAAgBtB,QAAQ,CAAC,EAAD,CAA9B;;AACE,QAAMuB,UAAU,GAAIC,OAAD,IAAa;AAC9BL,IAAAA,UAAU,CAACC,EAAD,CAAV;AACAE,IAAAA,OAAO,CAACE,OAAD,CAAP;AACL,GAHG;;AAKA,sBACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADN,eAEM,QAAC,WAAD;AAAa,MAAA,UAAU,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFN,EAGSP,MAAM,KAAK,SAAX,iBACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJV,EAMSA,MAAM,KAAK,OAAX,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPV,EASSA,MAAM,KAAK,SAAX,iBACC,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED,IAAI,CAACA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAVV;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBH;;GAvCuBL,Q;UAOCL,Q,EAQJA,Q;;;KAfGK,Q","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\"\r\nimport MovieGrid from \"./components/MovieGrid\";\r\nimport CategoryBar from \"./components/CategoryBar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nexport default function HomePage() {\r\n  \r\n  const fetchPopular = async ()=> {\r\n  const response = await fetch(\"/main\");\r\n  return response.json();\r\n\r\n}\r\n  const {data, status} = useQuery('popular', fetchPopular);\r\n  console.log(data)\r\n\r\n\r\n  const fetchGenre = async (id)=> {\r\n    const response = await fetch(`movies/getMoviesByGenre/${id}`);\r\n    return response.json();\r\n  }\r\n  const teamsQuery = useQuery('genre',  () => fetchGenre(id))\r\n  console.log(teamsQuery.data)\r\n  const [id, setData] = useState(\"\");\r\n    const getGenreId = (genreId) => {\r\n      fetchGenre(id);\r\n      setData(genreId);\r\n}\r\n\r\n    return (\r\n    <div className=\"bg-slate-300\">\r\n          <Header/>\r\n          <CategoryBar getGenreId={getGenreId}/>\r\n            {status === 'loading' && (\r\n              <Loader/>\r\n            )}\r\n            {status === 'error' && (\r\n              <div>Error fetching data</div>\r\n            )}\r\n            {status === 'success' && (\r\n              <MovieGrid data={data.data}/>\r\n            )}\r\n          {/* <MovieGrid data={genreId}/> */}\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}